echo "#################################################################"
echo "#                      Initialize the database                  #"
echo "#################################################################"

feature:install -r xipki-database-tool

echo "Sleeping 1 second"
sleep 1

xipki-db:initdb-pki \
  --force

xipki-db:initdb \
  --force \
  --db-conf  xipki/ocsp-config/ocsp-cache-db.properties \
  --db-schema xipki/sql/ocsp-cache-init.xml

xipki-db:initdb \
  --force \
  --db-conf  xipki/ocsp-config/ocsp-crl-db.properties \
  --db-schema xipki/sql/ocsp-init.xml

feature:uninstall xipki-database-tool

feature:install -r xipki-caserver

feature:install -r xipki-camgmt-shell

echo "Sleeping 1 second"
sleep 1

xipki-ca:restart

## Create the CSR for the command caqa:check-cert in QA
if { $TOKEN_TYPE equals "PKCS11" } {
  xipki-tk:req \
    --hash $HASH REPLACEME-DSAPLAIN REPLACEME-RSAMGF1 \
    --slot $SLOT \
    --label RCA1 \
    --out output/RCA1.csr \
    --subject "CN=RCA1,O=xipki,C=DE" \
    --keyusage cRLSign
} {
  xipki-tk:req-p12 \
    --hash $HASH REPLACEME-DSAPLAIN REPLACEME-RSAMGF1 \
    --p12 output/RCA1.p12 \
    --password 1234 \
    --out output/RCA1.csr \
    --subject "CN=RCA1,O=xipki,C=DE" \
    --keyusage cRLSign
}

echo "#################################################################"
echo "#                           Load RCA.xml                        #"
echo "#################################################################"

if { $TOKEN_TYPE equals "PKCS11" } {
  CA_SIGNER_CONF = "algo=$SIGALGO,slot=$SLOT,key-label=RCA1"
}

if { $TOKEN_TYPE equals "PKCS12" } {
  CA_SIGNER_CONF = "password=PBE:AQfQj/oIsHT0tGydAasTIJz0xhCA0KBFQoVh11UwhiQ/PMWZOpnXbErRLbX3Jc9VcQIqXg==,keystore=file:output/RCA1.p12,algo=$SIGALGO"
}

xipki-cmd:copy-file \
  -f \
  xipki/demo/demo.d/RCA.xml-template \
  xipki/demo/demo.d/RCA.xml

xipki-cmd:replace \
  --old "REPLACEME-CMP_SIGALGO" \
  --new "$CMP_SIGALGO" \
  xipki/demo/demo.d/RCA.xml

xipki-cmd:replace \
  --old "REPLACEME-TOKEN_TYPE" \
  --new "$TOKEN_TYPE" \
  xipki/demo/demo.d/RCA.xml

xipki-cmd:replace \
  --old "REPLACEME-CA_SIGNERCONF" \
  --new "$CA_SIGNER_CONF" \
  xipki/demo/demo.d/RCA.xml

xipki-cmd:replace \
  --old "REPLACEME-SIGALGO" \
  --new "$SIGALGO" \
  xipki/demo/demo.d/RCA.xml

xipki-cmd:replace \
  --old "REPLACEME-HASH" \
  --new "$HASH" \
  xipki/demo/demo.d/RCA.xml

xipki-ca:load-conf --conf-file xipki/demo/demo.d/RCA.xml

## Update the certificate in the device
if { $TOKEN_TYPE equals "PKCS11" } {
  xipki-tk:update-cert \
    --slot $SLOT \
    --label RCA1 \
    --cert output/RCA1.der
} {
  xipki-tk:update-cert-p12 \
    --p12 output/RCA1.p12 \
    --password 1234 \
    --cert output/RCA1.der
}

## Generate keys and CSR for SubCA1
if { $TOKEN_TYPE equals "PKCS11" } {
  xipki-tk:req \
    --hash $HASH REPLACEME-DSAPLAIN REPLACEME-RSAMGF1 \
    --slot $SLOT \
    --label SubCA1 \
    --out output/SubCA1.csr \
    --subject "CN=SubCA1,O=xipki,C=DE"
} {
  xipki-tk:req-p12 \
    --hash $HASH REPLACEME-DSAPLAIN REPLACEME-RSAMGF1 \
    --p12 output/SubCA1.p12 \
    --password 1234 \
    --out output/SubCA1.csr \
    --subject "CN=SubCA1,O=xipki,C=DE"
}

xipki-ca:enroll-cert \
  --ca RCA1 \
  --csr output/SubCA1.csr \
  --out output/SubCA1.der \
  --profile SubCA

if { $TOKEN_TYPE equals "PKCS11" } {
  xipki-tk:update-cert \
    --slot $SLOT \
    --label SubCA1 \
    --cert output/SubCA1.der \
} {
  xipki-tk:update-cert-p12 \
    --p12 output/SubCA1.p12 \
    --password 1234 \
    --cert output/SubCA1.der \
    --ca-cert output/RCA1.der
}

## Generate keys and CSR for SubCAwithCRL1
if { $TOKEN_TYPE equals "PKCS11" } {
  xipki-tk:req \
    --hash $HASH REPLACEME-DSAPLAIN REPLACEME-RSAMGF1 \
    --slot $SLOT \
    --label SubCAwithCRL1 --out output/SubCAwithCRL1.csr \
    --subject "CN=SubCAwithCRL1, O=xipki, C=DE" \
    --subject-alt-name "[1]info@xipki.org" \
    --subject-alt-name "[2]xipki.org" \
    --subject-alt-name "[5]edi-nameAssigner-1=edi-partyName1" \
    --subject-alt-name "[6]http://xipki.org/abc" \
    --subject-alt-name "[7]192.168.0.1" \
    --subject-alt-name "[8]1.2.3.4" \
    --subject-alt-name "[0]2.5.4.10=long organization name" \
    --subject-info-access "1.3.6.1.5.5.7.48.5=[6]http://example.org/abc" \
    --keyusage cRLSign
} {
  xipki-tk:req-p12 \
    --hash $HASH REPLACEME-DSAPLAIN REPLACEME-RSAMGF1 \
    --p12 output/SubCAwithCRL1.p12 \
    --password 1234 \
    --out output/SubCAwithCRL1.csr \
    --subject "CN=SubCAwithCRL1, O=xipki, C=DE" \
    --subject-alt-name "[1]info@xipki.org" \
    --subject-alt-name "[2]xipki.org" \
    --subject-alt-name "[5]edi-nameAssigner-1=edi-partyName1" \
    --subject-alt-name "[6]http://xipki.org/abc" \
    --subject-alt-name "[7]192.168.0.1" \
    --subject-alt-name "[8]1.2.3.4" \
    --subject-alt-name "[0]2.5.4.10=long organization name" \
    --subject-info-access "1.3.6.1.5.5.7.48.5=[6]http://example.org/abc" \
    --keyusage cRLSign
}

xipki-ca:enroll-cert \
  --ca RCA1 \
  --csr output/SubCAwithCRL1.csr \
  --out output/SubCAwithCRL1.der \
  --profile SubCA.Complex

if { $TOKEN_TYPE equals "PKCS11" } {
  xipki-tk:update-cert \
    --slot $SLOT \
    --label SubCAwithCRL1 \
    --cert output/SubCAwithCRL1.der \
} {
  xipki-tk:update-cert-p12 \
    --p12 output/SubCAwithCRL1.p12 \
    --password 1234 \
    --cert output/SubCAwithCRL1.der \
    --ca-cert output/RCA1.der
}

## Generate keys and CSR for OCSPResponder
if { $TOKEN_TYPE equals "PKCS11" } {
  xipki-tk:req \
    --hash $HASH REPLACEME-DSAPLAIN REPLACEME-RSAMGF1 \
    --slot $SLOT \
    --label OCSP99 \
    --out output/OCSP99.csr \
    --subject "CN=OCSP99,2.5.4.97=VATDE-123456789,O=xipki,C=DE"
} {
  xipki-tk:req-p12 \
    --hash $HASH REPLACEME-DSAPLAIN REPLACEME-RSAMGF1 \
    --p12 output/OCSP99.p12 \
    --password 1234 \
    --out output/OCSP99.csr \
    --subject "CN=OCSP99,2.5.4.97=VATDE-123456789,O=xipki,C=DE"
}

xipki-ca:enroll-cert \
  --ca RCA1 \
  --csr output/OCSP99.csr \
  --out output/OCSP99.der \
  --profile OCSP

if { $TOKEN_TYPE equals "PKCS11" } {
  xipki-tk:update-cert \
    --slot $SLOT \
    --label OCSP99 \
    --cert output/OCSP99.der \
} {
  xipki-tk:update-cert-p12 \
    --p12 output/OCSP99.p12 \
    --password 1234 \
    --cert output/OCSP99.der \
    --ca-cert output/RCA1.der
}

xipki-ca:caprofile-rm \
  --ca RCA1 \
  --profile OCSP

echo "#################################################################"
echo "#                        Add SubCA with OCSP                    #"
echo "#################################################################"
## Add CA

if { $TOKEN_TYPE equals "PKCS11" } {
  CA_SIGNER_CONF = "algo=$SIGALGO,slot=$SLOT,key-label=SubCA1"
}

if { $TOKEN_TYPE equals "PKCS12" } {
  CA_SIGNER_CONF = "password=PBE:AQfQj/oIsHT0tGydAasTIJz0xhCA0KBFQoVh11UwhiQ/PMWZOpnXbErRLbX3Jc9VcQIqXg==,keystore=file:output/SubCA1.p12,algo=$SIGALGO"
}

xipki-cmd:copy-file \
  -f \
  xipki/demo/demo.d/SubCA.xml-template \
  xipki/demo/demo.d/SubCA.xml

xipki-cmd:replace \
  --old "REPLACEME-TOKEN_TYPE" \
  --new "$TOKEN_TYPE" \
  xipki/demo/demo.d/SubCA.xml

xipki-cmd:replace \
  --old "REPLACEME-CA_SIGNERCONF" \
  --new "$CA_SIGNER_CONF" \
  xipki/demo/demo.d/SubCA.xml

xipki-ca:load-conf --conf-file xipki/demo/demo.d/SubCA.xml

## Restart the CA
#xipki-ca:restart

echo "#################################################################"
echo "#                       Add SubCA with CRL                      #"
echo "#################################################################"
## Add CA

if { $TOKEN_TYPE equals "PKCS11" } {
  CA_SIGNER_CONF = "algo=$SIGALGO,slot=$SLOT,key-label=SubCAwithCRL1"
}

if { $TOKEN_TYPE equals "PKCS12" } {
  CA_SIGNER_CONF = "password=PBE:AQfQj/oIsHT0tGydAasTIJz0xhCA0KBFQoVh11UwhiQ/PMWZOpnXbErRLbX3Jc9VcQIqXg==,keystore=file:output/SubCAwithCRL1.p12,algo=$SIGALGO"
}

xipki-cmd:copy-file \
  -f \
  xipki/demo/demo.d/SubCAwithCRL.xml-template \
  xipki/demo/demo.d/SubCAwithCRL.xml

xipki-cmd:replace \
  --old "REPLACEME-TOKEN_TYPE" \
  --new "$TOKEN_TYPE" \
  xipki/demo/demo.d/SubCAwithCRL.xml

xipki-cmd:replace \
  --old "REPLACEME-CA_SIGNERCONF" \
  --new "$CA_SIGNER_CONF" \
  xipki/demo/demo.d/SubCAwithCRL.xml

xipki-ca:load-conf --conf-file xipki/demo/demo.d/SubCAwithCRL.xml

source file:./xipki/demo/demo.d/scep-server.script
